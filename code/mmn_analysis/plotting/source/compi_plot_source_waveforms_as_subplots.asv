function fh = compi_plot_source_waveforms_as_subplots(options)
% Function for plotting extracted mean (over voxels) ERP waves (beta waves)
%   - over all voxels of the most significant 2nd level cluster
%   - of each computational quantity
%   - for each subject
%
% OUT
%   fh       [1, nContrasts] figure handles
% See also dmpad_get_blobs_as_waveforms

if nargin < 1
    options = compi_mmn_options();
end

%%  Load data for plotting

% specify significant sources
% 1: 'MSP_leftA1'; 2: 'MSP_rightA1', 3: 'MSP_leftSTG', 4: 'MSP_rightSTG',
% 5: 'MSP_leftIFG', 6: 'MSP_rightIFG'
sourceArray = {'1', '2'};

% specify contrasts of interest
% contrast 3 is f-test
iContrastArray = [3, 3];

erpWave   = compi_get_sourcewaveforms_all_subjects(options, sourceArray, iContrastArray);

%% loop over contrast, plot mean +- std error ERPs

fh = figure;
stringTitle = 'Mean source waveform (over trials) for computational quantities';
set(gcf, 'Name', stringTitle);

% significant time winow for plotting window around
clusterMaskArray = {[160 180], [160 180]};
% colour of plot
colourBlobArray = {'-m',  '-r'};

% loop over sources
for c = 1:length(iContrastArray)
    iContrast = c;
    hp = subplot(2,1,c);
    meanERPWave = mean(cell2mat(erpWave(:,c)),1).*10^2; % muV
    stdErrorERPWave = std(cell2mat(erpWave(:,c)),1).*10;
    clusterMask = clusterMaskArray{c};

    compi_plot_sourcewaveforms(options, meanERPWave, stdErrorERPWave, ...
     clusterMask,colourBlobArray{1}, iContrast);

    set(get(hp,'YLabel'),'String','\mu V','FontSize',20);
    set(hp,'LineWidth',2,'FontSize',12, 'FontName','Helvetica');
    
end

title(stringTitle);

% saveas(gcf, options.representation.meanbetawavefile, 'png');

end

